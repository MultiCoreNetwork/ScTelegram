plugins {
	id 'fabric-loom' version '0.4-SNAPSHOT'
	id 'maven-publish'
	id "com.github.johnrengelman.shadow" version "6.0.0"
}

repositories {
	maven {
		url 'https://masa.dy.fi/maven'
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "carpet:fabric-carpet:${project.minecraft_version}-${project.carpet_core_version}"

	implementation group: 'org.telegram', name: 'telegrambots', version: '5.0.0'
	include group: 'org.telegram', name: 'telegrambots', version: '5.0.0'
	shadow group: 'org.telegram', name: 'telegrambots', version: '5.0.0'

	implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.1'
	include group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.1'
	shadow group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.1'
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(jar) {
				builtBy remapJar
			}
			artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar"){
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}